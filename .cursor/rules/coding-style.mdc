---
globs: *.ts,tests/**/*.ts
description: TypeScript, ESM, linting, and import conventions
---

# Coding Style and Conventions

- TypeScript

    - Strict mode enabled; prefer explicit types on exported APIs
    - Use `moduleResolution: Bundler`; keep ESM-friendly imports
    - Internal imports should use the `~` alias (e.g., `import { buildCacheKey } from "~/utils"`)

- Modules

    - ESM-first (`"type": "module"` in [package.json](mdc:package.json))
    - Library export surface lives in [src/index.ts](mdc:src/index.ts); avoid deep importing other files from consumers

- Linting & Formatting

    - ESLint config: [eslint.config.mjs](mdc:eslint.config.mjs)
        - Prettier enforced as errors (`prettier/prettier`)
        - Unused variables are errors; prefix with `_` to intentionally ignore
    - Run `pnpm lint` and `pnpm format` before commits

- Code style
    - Favor early returns and small, well-named functions
    - Keep comments concise; explain "why" for non-obvious logic
    - Prefer named exports for library code; default exports only where idiomatic (e.g., Worker handler in tests)
